# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: tmdgenai1
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: my-service
# "service" is the name of this project. This will also be added to your AWS resource names.
service: my-service

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com
  deploymentBucket:
    name: tmd-genai1-students17
    blockPublicAccess: true
    serverSideEncryption: AES256
  environment:
    USERS_TABLE: ${self:service}-users-${sls:stage} # my-service-users-dev

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-users-${sls:stage}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  getUser:
    handler: handler.getUser
    events:
      - httpApi:
          path: /users/{id}
          method: get
  createUser:
    handler: handler.createUser
    events:
      - httpApi:
          path: /users
          method: post
  updateUser:
    handler: handler.updateUser
    events:
      - httpApi:
          path: /users/{id}
          method: put
  deleteUser:
    handler: handler.deleteUser
    events:
      - httpApi:
          path: /users/{id}
          method: delete
